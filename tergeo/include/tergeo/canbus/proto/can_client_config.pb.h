// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tergeo/canbus/proto/can_client_config.proto

#ifndef PROTOBUF_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto__INCLUDED
#define PROTOBUF_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tergeo {
namespace canbus {
namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto();
void protobuf_AssignDesc_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto();
void protobuf_ShutdownFile_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto();

class CanAdapter;
class CanClientConfig;

// ===================================================================

class CanAdapter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tergeo.canbus.proto.CanAdapter) */ {
 public:
  CanAdapter();
  virtual ~CanAdapter();

  CanAdapter(const CanAdapter& from);

  inline CanAdapter& operator=(const CanAdapter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CanAdapter& default_instance();

  void Swap(CanAdapter* other);

  // implements Message ----------------------------------------------

  inline CanAdapter* New() const { return New(NULL); }

  CanAdapter* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CanAdapter& from);
  void MergeFrom(const CanAdapter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CanAdapter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // optional int32 max_received_frame_num = 3;
  bool has_max_received_frame_num() const;
  void clear_max_received_frame_num();
  static const int kMaxReceivedFrameNumFieldNumber = 3;
  ::google::protobuf::int32 max_received_frame_num() const;
  void set_max_received_frame_num(::google::protobuf::int32 value);

  // repeated int32 filter_id = 4;
  int filter_id_size() const;
  void clear_filter_id();
  static const int kFilterIdFieldNumber = 4;
  ::google::protobuf::int32 filter_id(int index) const;
  void set_filter_id(int index, ::google::protobuf::int32 value);
  void add_filter_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      filter_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_filter_id();

  // optional bool enable = 5;
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 5;
  bool enable() const;
  void set_enable(bool value);

  // @@protoc_insertion_point(class_scope:tergeo.canbus.proto.CanAdapter)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_max_received_frame_num();
  inline void clear_has_max_received_frame_num();
  inline void set_has_enable();
  inline void clear_has_enable();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 max_received_frame_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > filter_id_;
  bool enable_;
  friend void  protobuf_AddDesc_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto();
  friend void protobuf_AssignDesc_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto();
  friend void protobuf_ShutdownFile_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto();

  void InitAsDefaultInstance();
  static CanAdapter* default_instance_;
};
// -------------------------------------------------------------------

class CanClientConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tergeo.canbus.proto.CanClientConfig) */ {
 public:
  CanClientConfig();
  virtual ~CanClientConfig();

  CanClientConfig(const CanClientConfig& from);

  inline CanClientConfig& operator=(const CanClientConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CanClientConfig& default_instance();

  void Swap(CanClientConfig* other);

  // implements Message ----------------------------------------------

  inline CanClientConfig* New() const { return New(NULL); }

  CanClientConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CanClientConfig& from);
  void MergeFrom(const CanClientConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CanClientConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tergeo.canbus.proto.CanAdapter can_adapter = 1;
  int can_adapter_size() const;
  void clear_can_adapter();
  static const int kCanAdapterFieldNumber = 1;
  const ::tergeo::canbus::proto::CanAdapter& can_adapter(int index) const;
  ::tergeo::canbus::proto::CanAdapter* mutable_can_adapter(int index);
  ::tergeo::canbus::proto::CanAdapter* add_can_adapter();
  ::google::protobuf::RepeatedPtrField< ::tergeo::canbus::proto::CanAdapter >*
      mutable_can_adapter();
  const ::google::protobuf::RepeatedPtrField< ::tergeo::canbus::proto::CanAdapter >&
      can_adapter() const;

  // @@protoc_insertion_point(class_scope:tergeo.canbus.proto.CanClientConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::tergeo::canbus::proto::CanAdapter > can_adapter_;
  friend void  protobuf_AddDesc_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto();
  friend void protobuf_AssignDesc_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto();
  friend void protobuf_ShutdownFile_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto();

  void InitAsDefaultInstance();
  static CanClientConfig* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CanAdapter

// optional string name = 1;
inline bool CanAdapter::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanAdapter::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CanAdapter::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CanAdapter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CanAdapter::name() const {
  // @@protoc_insertion_point(field_get:tergeo.canbus.proto.CanAdapter.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CanAdapter::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tergeo.canbus.proto.CanAdapter.name)
}
inline void CanAdapter::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tergeo.canbus.proto.CanAdapter.name)
}
inline void CanAdapter::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tergeo.canbus.proto.CanAdapter.name)
}
inline ::std::string* CanAdapter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:tergeo.canbus.proto.CanAdapter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CanAdapter::release_name() {
  // @@protoc_insertion_point(field_release:tergeo.canbus.proto.CanAdapter.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CanAdapter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tergeo.canbus.proto.CanAdapter.name)
}

// optional int32 port = 2;
inline bool CanAdapter::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CanAdapter::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CanAdapter::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CanAdapter::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 CanAdapter::port() const {
  // @@protoc_insertion_point(field_get:tergeo.canbus.proto.CanAdapter.port)
  return port_;
}
inline void CanAdapter::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:tergeo.canbus.proto.CanAdapter.port)
}

// optional int32 max_received_frame_num = 3;
inline bool CanAdapter::has_max_received_frame_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CanAdapter::set_has_max_received_frame_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CanAdapter::clear_has_max_received_frame_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CanAdapter::clear_max_received_frame_num() {
  max_received_frame_num_ = 0;
  clear_has_max_received_frame_num();
}
inline ::google::protobuf::int32 CanAdapter::max_received_frame_num() const {
  // @@protoc_insertion_point(field_get:tergeo.canbus.proto.CanAdapter.max_received_frame_num)
  return max_received_frame_num_;
}
inline void CanAdapter::set_max_received_frame_num(::google::protobuf::int32 value) {
  set_has_max_received_frame_num();
  max_received_frame_num_ = value;
  // @@protoc_insertion_point(field_set:tergeo.canbus.proto.CanAdapter.max_received_frame_num)
}

// repeated int32 filter_id = 4;
inline int CanAdapter::filter_id_size() const {
  return filter_id_.size();
}
inline void CanAdapter::clear_filter_id() {
  filter_id_.Clear();
}
inline ::google::protobuf::int32 CanAdapter::filter_id(int index) const {
  // @@protoc_insertion_point(field_get:tergeo.canbus.proto.CanAdapter.filter_id)
  return filter_id_.Get(index);
}
inline void CanAdapter::set_filter_id(int index, ::google::protobuf::int32 value) {
  filter_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:tergeo.canbus.proto.CanAdapter.filter_id)
}
inline void CanAdapter::add_filter_id(::google::protobuf::int32 value) {
  filter_id_.Add(value);
  // @@protoc_insertion_point(field_add:tergeo.canbus.proto.CanAdapter.filter_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CanAdapter::filter_id() const {
  // @@protoc_insertion_point(field_list:tergeo.canbus.proto.CanAdapter.filter_id)
  return filter_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CanAdapter::mutable_filter_id() {
  // @@protoc_insertion_point(field_mutable_list:tergeo.canbus.proto.CanAdapter.filter_id)
  return &filter_id_;
}

// optional bool enable = 5;
inline bool CanAdapter::has_enable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CanAdapter::set_has_enable() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CanAdapter::clear_has_enable() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CanAdapter::clear_enable() {
  enable_ = false;
  clear_has_enable();
}
inline bool CanAdapter::enable() const {
  // @@protoc_insertion_point(field_get:tergeo.canbus.proto.CanAdapter.enable)
  return enable_;
}
inline void CanAdapter::set_enable(bool value) {
  set_has_enable();
  enable_ = value;
  // @@protoc_insertion_point(field_set:tergeo.canbus.proto.CanAdapter.enable)
}

// -------------------------------------------------------------------

// CanClientConfig

// repeated .tergeo.canbus.proto.CanAdapter can_adapter = 1;
inline int CanClientConfig::can_adapter_size() const {
  return can_adapter_.size();
}
inline void CanClientConfig::clear_can_adapter() {
  can_adapter_.Clear();
}
inline const ::tergeo::canbus::proto::CanAdapter& CanClientConfig::can_adapter(int index) const {
  // @@protoc_insertion_point(field_get:tergeo.canbus.proto.CanClientConfig.can_adapter)
  return can_adapter_.Get(index);
}
inline ::tergeo::canbus::proto::CanAdapter* CanClientConfig::mutable_can_adapter(int index) {
  // @@protoc_insertion_point(field_mutable:tergeo.canbus.proto.CanClientConfig.can_adapter)
  return can_adapter_.Mutable(index);
}
inline ::tergeo::canbus::proto::CanAdapter* CanClientConfig::add_can_adapter() {
  // @@protoc_insertion_point(field_add:tergeo.canbus.proto.CanClientConfig.can_adapter)
  return can_adapter_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tergeo::canbus::proto::CanAdapter >*
CanClientConfig::mutable_can_adapter() {
  // @@protoc_insertion_point(field_mutable_list:tergeo.canbus.proto.CanClientConfig.can_adapter)
  return &can_adapter_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tergeo::canbus::proto::CanAdapter >&
CanClientConfig::can_adapter() const {
  // @@protoc_insertion_point(field_list:tergeo.canbus.proto.CanClientConfig.can_adapter)
  return can_adapter_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace canbus
}  // namespace tergeo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tergeo_2fcanbus_2fproto_2fcan_5fclient_5fconfig_2eproto__INCLUDED
